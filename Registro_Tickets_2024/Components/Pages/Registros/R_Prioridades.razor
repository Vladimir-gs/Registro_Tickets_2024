@page "/RegistrosPrioridades";

@rendermode InteractiveServer
@inject PrioridadServices prioridadesService;

<PageTitle>Registro de Prioridad</PageTitle>

<EditForm Model="prioridades" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">

            <div class="card-header">
                <h3>Registro de Prioridades</h3>
            </div>

            <div class="card-body">
                
                <div class="col-4">
                    <label class="fw-bold bi bi-calendar2-day mt-1">Prioridad Id</label>    
                    <InputNumber @bind-Value="prioridades.PrioridadId" class="form-control" />
                    <ValidationMessage For="@(() => prioridades.DiasCompromiso)" />
                </div>

                <div class="col-4">
                    <label class="form-label"> Descripci&oacute;n</label>
                    <InputText @bind-Value="prioridades.Descripcion" class="form-control"></InputText>
                    <ValidationMessage For="@(() => prioridades.Descripcion)" />
                </div>
            
                <div class="col-4">
                    <label class="fw-bold bi bi-calendar2-day mt-1"> Dias Compromiso</label>                   
                    <InputNumber @bind-Value="prioridades.DiasCompromiso" min="0" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => prioridades.DiasCompromiso)" />
                </div>

            </div>

            <div class="card-footer justify-content-center">
                <div class="btn-group">
                    <a href="/ConsultaPrioridades" class="btn btn-outline-danger bi bi-house-door-fill">Volver</a>
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-outline-success bi bi-floppy-fill">Guardar</button>
                </div>
            </div>
        </div>
    </div>
    
</EditForm>


@code {
    public Prioridades prioridades = new Prioridades();
    public int resultado { get; set; }

    public void Nuevo()
    {
        prioridades = new Prioridades();
   
    }

    public async Task Guardar()
    {
        var guardo = await prioridadesService.Guardar(prioridades);
        if (guardo)
        {
            resultado = 1;
            prioridades = new Prioridades();
        }
        else
        {
            resultado = 2;
        }
    }
}
